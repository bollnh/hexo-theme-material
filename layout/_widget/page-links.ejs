<style>
    .md-links {
        min-height: calc(100% - 120px - 5pc);
        text-align: center;
        overflow: auto;
        padding: 0;
        margin: 0 auto;
        max-width: 320px;
    }

    @media screen and (min-width: 680px) {
        .md-links {
            max-width: 640px;
        }
    }

    @media screen and (min-width: 1000px) {
        .md-links {
            max-width: 960px;
        }
    }

    @media screen and (min-width: 1320px) {
        .md-links {
            max-width: 1280px;
        }
    }

    @media screen and (min-width: 1640px) {
        .md-links {
            max-width: 1600px;
        }
    }

    @media screen and (max-width: 480px) {
        .md-links {
            min-height: calc(100% - 200px - 5pc);
        }
    }

    .md-links-item {
        background: #fff;
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .2), 0 1px 5px 0 rgba(0, 0, 0, .12);
        height: 72px;
        line-height: 15px;
        margin: 20px 10px;
        padding: 0px 0px;
        transition: box-shadow 0.25s;
    }

    .md-links a {
        color: #333;
        text-decoration: none;
    }

    .md-links li {
        width: 300px;
        float: left;
        list-style: none;
    }

    .md-links-item img {
        float: left;
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 11px -2px rgba(0, 0, 0, .2), 0 1px 5px 0 rgba(0, 0, 0, .12);
    }

    .md-links-item:hover {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    .md-links-item a:hover {
        cursor: pointer;
    }

    .md-links-item .md-links-desc {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        position: relative;
        line-height: 15px;
        height: 30px;
        overflow: hidden;
    }

    .md-links-title {
        font-size: 20px;
        line-height: 40px;
    }

    #scheme-Paradox .mdl-mini-footer {
        clear: left;
    }

    #bottom {
        position: relative;
    }
</style>

<ul class="md-links">
    <% if (site.data.links) { %>
        <% for (var i in site.data.links) { %>
            <li class="md-links-item">
                <a href="<%= site.data.links[i].link %>" title="<%= i %>" target="_blank">
                    <img src="<%= site.data.links[i].avatar %>" alt="<%= i %>" width="72px"/>
                    <span class="md-links-title"><%= i %></span><br />
                    <span class="md-links-desc"><%= site.data.links[i].descr %></span>
                </a>
            </li>
        <% } %>
    <% } %>
</ul>

<script type="text/ls-javascript" id="page-links-script">
    var addGithubLink = function(userData,self=false){
       var linkstr = `
            <li class="md-links-item">
                <a href="${userData.html_url}" title="${userData.login}\n${(userData.bio? (userData.bio+'\n') :'') + userData.public_repos +' repos' + ' && ' + userData.followers + ' followers'}" target="_blank">
                    <img src="${userData.avatar_url}" alt="${userData.login}" width="72px"/>
                    <span class="md-links-title">${userData.name||userData.login}</span><br />
                    <span class="md-links-desc">${userData.bio || userData.public_repos +' repos' + ' && '+userData.followers+' followers' }</span>
                </a>
            </li>`;

        if (self) 
            $('.md-links').prepend(linkstr);
        else
            $('.md-links').append(linkstr);
    }
    $(document).ready(function() {
        <% if (page.github && page.github.name) { %>
            var friends=[];
            <% if (page.github.self){ %>
                $.ajax({
                    url:'https://api.github.com/users/<%= page.github.name %>',
                    <% if (page.github.access_token){ %> data: {access_token: '<%= page.github.access_token %>' }, <% } %>
                    jsonp:'callback',
                    success:function(userData){
                        friends.push(userData);
                        addGithubLink(userData,true);
                    }
                })
            <% } %>

            <% if (page.github.followers){ %>
                 $.ajax({
                    url: 'https://api.github.com/users/<%= page.github.name %>/followers',
                    <% if (page.github.access_token){ %> data: {access_token: '<%= page.github.access_token %>' }, <% } %>
                    jsonp:'callback',
                    success:function(data){
                        data.forEach(function(item){
                            if (!friends.some(x=>x.id==item.id)){
                                friends.push(item);
                                $.ajax({
                                    url:'https://api.github.com/users/'+item.login,
                                    <% if (page.github.access_token){ %> data: {access_token: '<%= page.github.access_token %>' }, <% } %>
                                    jsonp:'callback',
                                    success:function(userData){
                                        addGithubLink(userData); 
                                    }
                                });
                            }
                        }); 
                    }
                });
            <% } %>

            <% if (page.github.following) { %>
                $.ajax({
                    url: 'https://api.github.com/users/<%= page.github.name %>/following',
                    <% if (page.github.access_token){ %> data: {access_token: '<%= page.github.access_token %>' }, <% } %>
                    jsonp:'callback',
                    success: function(data){
                        data.forEach(function(item){
                            if (!friends.some(x=>x.id==item.id)) {
                                friends.push(item);
                                $.ajax({
                                    url:'https://api.github.com/users/'+item.login,
                                    <% if (page.github.access_token){ %> data: {access_token: '<%= page.github.access_token %>' }, <% } %>
                                    jsonp:'callback',
                                    success: function(userData){
                                        addGithubLink(userData);
                                    }
                                });
                            }
                        });
                    }
                });
            <% } %>
        <% } %>
    });
</script>